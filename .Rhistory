<<<<<<< HEAD
coord_flip() +
ggtitle("Gennemsnitligt antal ansøgere")
ggplot(data4, aes(x=InstNavn, y=GnsTotalAng)) +
geom_bar(stat="identity", fill="#53cfff") +
#geom_text(aes(x=InstNavn, y=TotalOpt), size=4) +
theme_light(base_size=15) +
#theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
xlab("") +
coord_flip() +
ggtitle("Gennemsnitligt antal ansøgere")
ggplot(data4, aes(x=InstNavn, y=GnsTotalAng)) +
geom_bar(stat="identity", fill="#53cfff") +
#geom_text(aes(x=InstNavn, y=TotalOpt), size=4) +
theme_light(base_size=10) +
#theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
xlab("") +
coord_flip() +
ggtitle("Gennemsnitligt antal ansøgere")
ggplot(data4, aes(x=InstNavn, y=GnsTotalAng)) +
geom_bar(stat="identity", fill="#53cfff") +
#geom_text(aes(x=InstNavn, y=TotalOpt), size=4) +
theme_light(base_size=16) +
#theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
xlab("") +
coord_flip() +
ggtitle("Gennemsnitligt antal ansøgere")
ggplot(data4, aes(x=InstNavn, y=GnsTotalAng)) +
geom_bar(stat="identity", fill="#53cfff") +
geom_text(aes(x=College, y=GnsTotalAng, ymax=GnsTotalAng, hjust=1, label=GnsTotalAng), size=4) +
theme_light(base_size=16) +
#theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
xlab("") +
coord_flip() +
ggtitle("Gennemsnitligt antal ansøgere")
ggplot(data4, aes(x=InstNavn, y=GnsTotalAng)) +
geom_bar(stat="identity", fill="#53cfff") +
geom_text(aes(x=InstNavn, y=GnsTotalAng, ymax=GnsTotalAng, hjust=1, label=GnsTotalAng), size=4) +
theme_light(base_size=16) +
#theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
coord_flip() +
xlab("") +
ggtitle("Gennemsnitligt antal ansøgere")
ggplot(data4, aes(x=InstNavn, y=GnsTotalAng)) +
geom_bar(stat="identity", fill="#53cfff", position="dodge") +
geom_text(aes(x=InstNavn, y=GnsTotalAng, ymax=GnsTotalAng, hjust=1, label=GnsTotalAng), size=4) +
theme_light(base_size=16) +
#theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
xlab("") +
coord_flip() +
ggtitle("Gennemsnitligt antal ansøgere")
ggplot(data4, aes(x=InstNavn)) +
geom_bar(stat="identity", fill="#53cfff", position="dodge") +
geom_text(aes(x=InstNavn, y=GnsTotalAng, ymax=GnsTotalAng, hjust=1, label=GnsTotalAng), size=4) +
theme_light(base_size=16) +
#theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
xlab("") +
coord_flip() +
ggtitle("Gennemsnitligt antal ansøgere")
ggplot(data4, aes(x=InstNavn, y=GnsTotalAng)) +
geom_bar(stat="identity", fill="#53cfff", position="dodge") +
geom_text(aes(x=InstNavn, y=GnsTotalAng, ymax=GnsTotalAng, hjust=1, label=GnsTotalAng), size=4) +
theme_light(base_size=16) +
#theme(axis.text.y = element_text(hjust=0, color="black"), axis.text.x=element_blank()) +
xlab("") +
coord_flip() +
ggtitle("Gennemsnitligt antal ansøgere")
View(data4)
View(data4)
data5 = data2 %>%
group_by(InstNavn) %>%
summarise( GnsAngM = sum(AngMaend, na.rm=TRUE)/4,
GnsAngK = sum(AngKvinder, na.rm=TRUE)/4)
View(data5)
138+171
data5 = data2 %>%
group_by(InstNavn) %>%
summarise( GnsAngM = round(sum(AngMaend, na.rm=TRUE)/4,0),
GnsAngK = round(sum(AngKvinder, na.rm=TRUE)/4, 0))
View(data5)
data6 = data.frame(
InstNavn = c(rep("Arkitektskolen", 2), rep("AU", 2), rep("CBS", 2), rep("Designskolen",2))
)
View(data6)
data6 = data.frame(
InstNavn = c(rep("Arkitektskolen", 2), rep("AU", 2), rep("CBS", 2), rep("Designskolen",2),
rep("Det Kongelige Danske Kunstakademi", 2), rep("DTU", 2),
rep("ITU", 2), rep("KU", 2), rep("RUC", 2), rep("SDU", 2), rep("AAU", 2)),
InstNavn1 = c(rep(data5$InstNavn,2))
)
View(data6)
data6 = data.frame(
InstNavn = c(rep("Arkitektskolen", 2), rep("AU", 2), rep("CBS", 2), rep("Designskolen",2),
rep("Det Kongelige Danske Kunstakademi", 2), rep("DTU", 2),
rep("ITU", 2), rep("KU", 2), rep("RUC", 2), rep("SDU", 2), rep("AAU", 2)),
InstNavn1 = c(data5$InstNavn, data5$InstNavn)
)
View(data6)
data6 = data.frame(
InstNavn = c(rep("Arkitektskolen", 2), rep("AU", 2), rep("CBS", 2), rep("Designskolen",2),
rep("Det Kongelige Danske Kunstakademi", 2), rep("DTU", 2),
rep("ITU", 2), rep("KU", 2), rep("RUC", 2), rep("SDU", 2), rep("AAU", 2)),
GnsAng = c(139, 172, 3780, 4542, 2686, 2395, 57, 193, 520, 970, 927, 394, 357, 99,
4642, 7332, 722, 1078, 2546, 2934, 2593, 2355),
Sex = c(rep("M,K",11))
)
View(data6)
data6 = data.frame(
InstNavn = c(rep("Arkitektskolen", 2), rep("AU", 2), rep("CBS", 2), rep("Designskolen",2),
rep("Det Kongelige Danske Kunstakademi", 2), rep("DTU", 2),
rep("ITU", 2), rep("KU", 2), rep("RUC", 2), rep("SDU", 2), rep("AAU", 2)),
GnsAng = c(139, 172, 3780, 4542, 2686, 2395, 57, 193, 520, 970, 927, 394, 357, 99,
4642, 7332, 722, 1078, 2546, 2934, 2593, 2355),
Sex = c(rep("M","K",11))
)
data6 = data.frame(
InstNavn = c(rep("Arkitektskolen", 2), rep("AU", 2), rep("CBS", 2), rep("Designskolen",2),
rep("Det Kongelige Danske Kunstakademi", 2), rep("DTU", 2),
rep("ITU", 2), rep("KU", 2), rep("RUC", 2), rep("SDU", 2), rep("AAU", 2)),
GnsAng = c(139, 172, 3780, 4542, 2686, 2395, 57, 193, 520, 970, 927, 394, 357, 99,
4642, 7332, 722, 1078, 2546, 2934, 2593, 2355),
Sex = c(rep(("M","K"),11))
)
View(data6)
?rep
data6 = data.frame(
InstNavn = c(rep("Arkitektskolen", 2), rep("AU", 2), rep("CBS", 2), rep("Designskolen",2),
rep("Det Kongelige Danske Kunstakademi", 2), rep("DTU", 2),
rep("ITU", 2), rep("KU", 2), rep("RUC", 2), rep("SDU", 2), rep("AAU", 2)),
GnsAng = c(139, 172, 3780, 4542, 2686, 2395, 57, 193, 520, 970, 927, 394, 357, 99,
4642, 7332, 722, 1078, 2546, 2934, 2593, 2355),
Sex = c(rep(c("M","K"), 11))
)
View(data6)
ggplot(data=data6, aes(x=InstNavn, y=GnsAng, fill=Sex)) +
geom_bar(stat="identity")
ggplot(data=data6, aes(x=InstNavn, y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip()
View(data6)
ggplot(data=data6, aes(x=InstNavn, y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total")
ggplot(data=data6, aes(x=InstNavn, y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("")
data7 = cbind(Rank=1:nrow(data6), data6)
View(data7)
data3 %>%
ggvis(~Aar, ~TotalKviOpt, stroke = ~factor(Retning)) %>%
layer_lines
data7 = data6 %>%
arrange(desc(GnsAng))
View(data7)
ggplot(data=data7, aes(x=InstNavn, y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("")
data7 = data6 %>%
arrange("Designskolen", "Arkitektskolen", "ITU", "DTU", "Det Kongelige Danske Kunstakademi",
"RUC", "AAU", "CBS", "SDU", "AU", "KU")
data6 = data.frame(
InstNavn = c(rep("Designskolen", 2), rep("Arkitektskolen", 2), rep("ITU", 2), rep("DTU",2),
rep("Det Kongelige Danske Kunstakademi", 2), rep("RUC", 2),
rep("AAU", 2), rep("CBS", 2), rep("SDU", 2), rep("AU", 2), rep("KU", 2)),
GnsAng = c(57, 193, 138, 172, 357, 99, 927, 394, 520, 970, 722, 1078, 2593, 2355, 2686, 2395,
2546, 2934, 3780, 4542, 4642, 7332),
Sex = c(rep(c("M","K"), 11))
)
View(data6)
ggplot(data=data6, aes(x=InstNavn, y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("")
data6 = data.frame(
InstNavn = c(rep("Designskolen", 2), rep("Arkitektskolen", 2), rep("ITU", 2), rep("DTU",2),
rep("Det Kongelige Danske Kunstakademi", 2), rep("RUC", 2),
rep("AAU", 2), rep("CBS", 2), rep("SDU", 2), rep("AU", 2), rep("KU", 2)),
GnsAng = c(57, 193, 138, 172, 357, 99, 927, 394, 520, 970, 722, 1078, 2593, 2355, 2686, 2395,
2546, 2934, 3780, 4542, 4642, 7332),
Sex = c(rep(c("M","K"), 11))
)
ggplot(data=data6, aes(x=InstNavn, y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("")
ggplot(data=data6, aes(x=InstNavn, y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("") +
opts(axis.text.y=theme_text(angle=90))
??opts
library("knitr")
ggplot(data=data6, aes(x=InstNavn, y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("") +
opts(axis.text.y=theme_text(angle=90))
??melt
data7 = melt(data6, id(c("InstNavn")))
install.packages("reshape")
library("reshape")
data7 = melt(data6, id(c("InstNavn")))
View(data7)
View(data7)
View(data7)
ggplot(data7, aes(x = InstNavn, y = value, fill=variable)) +
geom_bar() + coord_flip()
ggplot(data=data6, aes(x=InstNavn, y=GnsAng, fill=Sex)) +
geom_bar(stat="identity", aes(weights=GnsAng)) +
coord_flip() + ylab("Total") + xlab("")
ggplot(data=data6, aes(x=InstNavn, y=GnsAng, fill=Sex)) +
geom_bar(aes(weights=GnsAng)) +
coord_flip() + ylab("Total") + xlab("")
ggplot(data=data6, aes(x=InstNavn, y=GnsAng, fill=Sex)) +
geom_bar(aes(weights=GnsAng), position="dodge") +
coord_flip() + ylab("Total") + xlab("")
ggplot(data=data6, aes(x=InstNavn, y=GnsAng, fill=Sex)) +
geom_bar(aes(weights=GnsAng), position="dodge") +
coord_flip() + ylab("Total") + xlab("")
ggplot(data=data6, aes(x=InstNavn, y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("")
ggplot(data=data6, aes(x=InstNavn, y=GnsAng, fill=Sex, order=GnsAng)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("")
ggplot(data=data6, aes(x=InstNavn, y=GnsAng, fill=Sex, order=as.factor(GnsAng))) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("")
ggplot(data=data6, aes(x=InstNavn, y=GnsAng, fill=Sex, order=GnsAng)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("")
ggplot(data=data6, aes(x=InstNavn, y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("")
ggplot(data=data6, aes(x=InstNavn, y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("")
ggplot(data=data6, aes(x=InstNavn, y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("")
data6$InstNavn = reorder(data6$InstNavn, rowSums(data6[-1]))
data6 = within(data6, Position=factor(Position, levels=names(sort(table(Position), decreasing=TRUE))))
data6 <- within(data6, InstNavn <- factor(InstNavn,
levels=names(sort(table(InstNavn), decreasing=TRUE))))
View(data6)
ggplot(data=data6, aes(x=InstNavn, y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("")
data6 <- within(data6, InstNavn <- factor(InstNavn,
levels=names(sort(table(InstNavn), decreasing=FALSE))))
View(data6)
data6 <- within(data6, InstNavn <- levels=names(sort(table(InstNavn), decreasing=FALSE))))
data6 <- within(data6, levels=names(sort(table(InstNavn), decreasing=FALSE))))
ggplot(data=data6, aes(x=reorder(InstNavn, -Count), y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("")
ggplot(data=data6, aes(x=reorder(InstNavn, -GnsAng), y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("")
ggplot(data=data6, aes(x=reorder(InstNavn, GnsAng), y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("")
ggplot(data3, aes(Aar, TotalKviOpt, color = Retning)) +
geom_line()
View(data2)
datatop10 = data2 %>%
arrange(AngKvinder)
View(datatop10)
datatop10 = data2 %>%
arrange(-AngKvinder)
View(datatop10)
datatop10 = data2 %>%
arrange(-AngKvinder) %>%
filter(AngKvinder > 800)
View(datatop10)
datatop10 = data2 %>%
group_by(Aar)
arrange(-AngKvinder) %>%
filter(AngKvinder > 800) %>%
select(InstNavn, AngKvinder, AngMaend, )
datatop10 = data2 %>%
group_by(Aar)
arrange(-AngKvinder)
datatop10 = data2 %>%
group_by(Aar)
arrange(-AngKvinder) %>%
filter(AngKvinder > 800)
datatop10 = data2 %>%
group_by(Aar, AngKvinder)
arrange(-AngKvinder) %>%
filter(AngKvinder > 800)
View(data2)
datatop10 = data2 %>%
arrange(-AngKvinder) %>%
filter(AngKvinder > 800)
datatop10 = data2 %>%
filter(Aar == "2016", AngKvinder > 800) %>%
arrange(-AngKvinder)
View(datatop10)
datatop10 = data2 %>%
filter(Aar == "2016") %>%
arrange(-AngKvinder)
View(datatop10)
datatop10 = data2 %>%
filter(Aar == "2016", AngKvinder > 400) %>%
arrange(-AngKvinder)
View(datatop10)
datatopK = data2 %>%
filter(Aar == "2016", AngKvinder > 400) %>%
arrange(-AngKvinder)
dataTopM = data2 %>%
filter(Aar == "2016") %>%
arrange(-AngMaend)
View(dataTopM)
dataTopM = data2 %>%
filter(Aar == "2016", AngMaend > 250) %>%
arrange(-AngMaend)
View(dataTopM)
View(datatopK)
ggplot(data = dataTopK, aes(x = Uddannelse, y = AngKvinder)) +
geom_bar()
dataTopK = data2 %>%
filter(Aar == "2016", AngKvinder > 400) %>%
arrange(-AngKvinder)
ggplot(data = dataTopK, aes(x = Uddannelse, y = AngKvinder)) +
geom_bar()
ggplot(data = dataTopK, aes(x = Uddannelse, y = AngKvinder)) +
geom_bar(stat = "identity")
ggplot(data = dataTopK, aes(x = Uddannelse, y = AngKvinder)) +
geom_bar(stat = "identity") +
coord_flip
coord_flip()
ggplot(data = dataTopK, aes(x = Uddannelse, y = AngKvinder)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(data = dataTopK, aes(x = OptNavn, y = AngKvinder)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(data = dataTopK, aes(x = reorder(OptNavn, AngKvinder), y = AngKvinder)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(data = dataTopM, aes(x=reorder(OptNavn, AngMaend), y = AngMaend)) +
geom_bar(stat = "identity") +
coord_flip()
dataTop = data2 %>%
group_by(OptNavn) %>%
summarise(GnsAngM = round(sum(AngMaend, na.rm=TRUE)/4,0),
GnsAngK = round(sum(AngKvinder, na.rm=TRUE)/4, 0))
View(dataTop)
filter(Aar == "2016")
dataTop = data2 %>%
filter(Aar == "2016")
dataTop = data2 %>%
group_by(OptNavn, Aar) %>%
summarise(GnsAngM = round(sum(AngMaend, na.rm=TRUE)/4,0),
GnsAngK = round(sum(AngKvinder, na.rm=TRUE)/4, 0))
View(dataTop)
ggplot(data = dataTopK, aes(x = reorder(OptNavn, AngKvinder), y = AngKvinder)) +
geom_bar(stat = "identity", color="blue") +
coord_flip()
ggplot(data = dataTopK, aes(x = reorder(OptNavn, AngKvinder), y = AngKvinder)) +
geom_bar(stat = "identity", color="blue", fill="blue") +
coord_flip()
ggplot(data = dataTopK, aes(x = reorder(OptNavn, AngKvinder), y = AngKvinder)) +
geom_bar(stat = "identity", color="slateblue3", fill="slateblue3") +
coord_flip()
ggplot(data = dataTopK, aes(x = reorder(OptNavn, AngKvinder), y = AngKvinder)) +
geom_bar(stat = "identity", color="steelblue4", fill="steelblue4") +
coord_flip()
ggplot(data = dataTopK, aes(x = reorder(OptNavn, AngKvinder), y = AngKvinder)) +
geom_bar(stat = "identity", color="steelblue3", fill="steelblue3") +
coord_flip()
ggplot(data=data6, aes(x=reorder(InstNavn, GnsAng), y=GnsAng, fill=Sex)) +
geom_bar(stat="identity", color="steelblue3") +
coord_flip() + ylab("Total") + xlab("")
ggplot(data=data6, aes(x=reorder(InstNavn, GnsAng), y=GnsAng, fill=Sex)) +
geom_bar(stat="identity", color="steelblue3", fill="steelblue3") +
coord_flip() + ylab("Total") + xlab("")
ggplot(data=data6, aes(x=reorder(InstNavn, GnsAng), y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("")
ggplot(data=data6, aes(x=reorder(InstNavn, GnsAng), y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("") +
scale_fill_manual(values=c("steelblue3", "indianred4"))
ggplot(data=data6, aes(x=reorder(InstNavn, GnsAng), y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("") +
scale_fill_manual(values=c("steelblue3", "indianred3"))
ggplot(data=data6, aes(x=reorder(InstNavn, GnsAng), y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("") +
scale_fill_manual(values=c("steelblue3", "orangered1"))
scale_fill_manual(values=c("palegreen4", "orangered1"))
ggplot(data=data6, aes(x=reorder(InstNavn, GnsAng), y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("") +
scale_fill_manual(values=c("palegreen4", "orangered1"))
ggplot(data=data6, aes(x=reorder(InstNavn, GnsAng), y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("") +
scale_fill_manual(values=c("royalblue4", "orangered1"))
ggplot(data=data6, aes(x=reorder(InstNavn, GnsAng), y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("") +
scale_fill_manual(values=c("royalblue4", "royalblue3"))
ggplot(data=data6, aes(x=reorder(InstNavn, GnsAng), y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("") +
scale_fill_manual(values=c("royalblue2", "royalblue3"))
ggplot(data=data6, aes(x=reorder(InstNavn, GnsAng), y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("") +
scale_fill_manual(values=c("royalblue1", "royalblue3"))
ggplot(data=data6, aes(x=reorder(InstNavn, GnsAng), y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("") +
scale_fill_manual(values=c("royalblue2", "royalblue4"))
ggplot(data=data6, aes(x=reorder(InstNavn, GnsAng), y=GnsAng, fill=Sex)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("") +
scale_fill_manual(values=c("royalblue2", "royalblue4")) + # valgfrie farver se link: http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf
ggtitle("Fordeling af ansøgere")
data6 = data.frame(
InstNavn = c(rep("Designskolen", 2), rep("Arkitektskolen", 2), rep("ITU", 2), rep("DTU",2),
rep("Det Kongelige Danske Kunstakademi", 2), rep("RUC", 2),
rep("AAU", 2), rep("CBS", 2), rep("SDU", 2), rep("AU", 2), rep("KU", 2)),
GnsAng = c(57, 193, 138, 172, 357, 99, 927, 394, 520, 970, 722, 1078, 2593, 2355, 2686, 2395,
2546, 2934, 3780, 4542, 4642, 7332),
Køn = c(rep(c("Mand","Kvinde"), 11))
)
ggplot(data=data6, aes(x=reorder(InstNavn, GnsAng), y=GnsAng, fill=Sex)) +
data6 = data.frame(
InstNavn = c(rep("Designskolen", 2), rep("Arkitektskolen", 2), rep("ITU", 2), rep("DTU",2),
rep("Det Kongelige Danske Kunstakademi", 2), rep("RUC", 2),
rep("AAU", 2), rep("CBS", 2), rep("SDU", 2), rep("AU", 2), rep("KU", 2)),
GnsAng = c(57, 193, 138, 172, 357, 99, 927, 394, 520, 970, 722, 1078, 2593, 2355, 2686, 2395,
2546, 2934, 3780, 4542, 4642, 7332),
Køn = c(rep(c("Mand","Kvinde"), 11))
)
data6 = data.frame(
InstNavn = c(rep("Designskolen", 2), rep("Arkitektskolen", 2), rep("ITU", 2), rep("DTU",2),
rep("Det Kongelige Danske Kunstakademi", 2), rep("RUC", 2),
rep("AAU", 2), rep("CBS", 2), rep("SDU", 2), rep("AU", 2), rep("KU", 2)),
GnsAng = c(57, 193, 138, 172, 357, 99, 927, 394, 520, 970, 722, 1078, 2593, 2355, 2686, 2395,
2546, 2934, 3780, 4542, 4642, 7332),
Køn = c(rep(c("Mand","Kvinde"), 11))
)
View(data6)
data6 = data.frame(
InstNavn = c(rep("Designskolen", 2), rep("Arkitektskolen", 2), rep("ITU", 2), rep("DTU",2),
rep("Det Kongelige Danske Kunstakademi", 2), rep("RUC", 2),
rep("AAU", 2), rep("CBS", 2), rep("SDU", 2), rep("AU", 2), rep("KU", 2)),
GnsAng = c(57, 193, 138, 172, 357, 99, 927, 394, 520, 970, 722, 1078, 2593, 2355, 2686, 2395,
2546, 2934, 3780, 4542, 4642, 7332),
Koen = c(rep(c("Mand","Kvinde"), 11))
)
ggplot(data=data6, aes(x=reorder(InstNavn, GnsAng), y=GnsAng, fill=Koen)) +
geom_bar(stat="identity") +
coord_flip() + ylab("Total") + xlab("") +
scale_fill_manual(values=c("royalblue2", "royalblue4")) + # valgfrie farver se link: http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf
ggtitle("Fordeling af ansøgere")
ggplot(data = dataTopK, aes(x = reorder(OptNavn, AngKvinder), y = AngKvinder)) +
geom_bar(stat = "identity", color="royalblue2", fill="royalblue2") +
coord_flip()
ggplot(data = dataTopM, aes(x=reorder(OptNavn, AngMaend), y = AngMaend)) +
geom_bar(stat = "identity", color = "royalblue4", fill="royalblue4") +
coord_flip()
ggplot(data = dataTopM, aes(x=reorder(OptNavn, AngMaend), y = AngMaend)) +
geom_bar(stat = "identity", color = "royalblue4", fill="royalblue4") +
coord_flip() +
xlab("Mandlige ansøgere") + ylab("")
ggplot(data = dataTopM, aes(x=reorder(OptNavn, AngMaend), y = AngMaend)) +
geom_bar(stat = "identity", color = "royalblue4", fill="royalblue4") +
coord_flip() +
ylab("Mandlige ansøgere") + xlab("")
ggplot(data = dataTopM, aes(x=reorder(OptNavn, AngMaend), y = AngMaend)) +
geom_bar(stat = "identity", color = "royalblue4", fill="royalblue4") +
coord_flip() + ggtitle("Top 10 uddannelser for mænd") +
ylab("Mandlige ansøgere") + xlab("")
ggplot(data = dataTopK, aes(x = reorder(OptNavn, AngKvinder), y = AngKvinder)) +
geom_bar(stat = "identity", color="royalblue2", fill="royalblue2") +
coord_flip() + ggtitle("Top 10 uddannelser for kvinder") +
ylab("Kvindelige ansøgere") + xlab("")
ggplot(data = dataTopK, aes(x = reorder(OptNavn, AngKvinder), y = AngKvinder)) +
geom_bar(stat = "identity", color="royalblue2", fill="royalblue2") +
coord_flip() + ggtitle("Top 10 uddannelser for kvinder") +
ylab("Ansøgere") + xlab("")
ggplot(data = dataTopM, aes(x=reorder(OptNavn, AngMaend), y = AngMaend)) +
geom_bar(stat = "identity", color = "royalblue4", fill="royalblue4") +
coord_flip() + ggtitle("Top 10 uddannelser for mænd") +
ylab("Ansøgere") + xlab("")
View(dataTopM)
ggplot(data = dataTopM, aes(x=reorder(OptNavn, AngMaend), y = AngMaend)) +
geom_bar(stat = "identity", color = Retning, fill="royalblue4") +
coord_flip() + ggtitle("Top 10 uddannelser for mænd") +
ylab("Ansøgere") + xlab("")
ggplot(data = dataTopM, aes(x=reorder(OptNavn, AngMaend), y = AngMaend)) +
geom_bar(stat = "identity", color = "Retning", fill="royalblue4") +
coord_flip() + ggtitle("Top 10 uddannelser for mænd") +
ylab("Ansøgere") + xlab("")
ggplot(data = dataTopM, aes(x=reorder(OptNavn, AngMaend), y = AngMaend)) +
geom_bar(stat = "identity", color = dataTopM$Retning, fill="royalblue4") +
coord_flip() + ggtitle("Top 10 uddannelser for mænd") +
ylab("Ansøgere") + xlab("")
ggplot(data = dataTopM, aes(x=reorder(OptNavn, AngMaend), y = AngMaend), fill = Retning) +
geom_bar(stat = "identity") +
coord_flip() + ggtitle("Top 10 uddannelser for mænd") +
ylab("Ansøgere") + xlab("")
ggplot(data = dataTopM, aes(x=reorder(OptNavn, AngMaend), y = AngMaend), color = Retning) +
geom_bar(stat = "identity") +
coord_flip() + ggtitle("Top 10 uddannelser for mænd") +
ylab("Ansøgere") + xlab("")
ggplot(data = dataTopM, aes(x=reorder(OptNavn, AngMaend), y = AngMaend)) +
geom_bar(stat = "identity", color = "royalblue4", fill="royalblue4") +
coord_flip() + ggtitle("Top 10 uddannelser for mænd") +
ylab("Ansøgere") + xlab("")
=======
gr = as.numeric(fxb)*(diag(k1) - as.numeric(xb) *(be %*% t(xm)))
mfx$se = sqrt(diag(gr %*% vcv %*% t(gr)))
} else {
gr = apply(x1, 1, function(x){
as.numeric(as.numeric(dnorm(x %*% be))*(diag(k1) - as.numeric(x %*% be)*(be %*% t(x))))
})
gr = matrix(apply(gr,1,mean),nrow=k1)
mfx$se = sqrt(diag(gr %*% vcv %*% t(gr)))
}
# pick out constant and remove from mfx table
temp1 = apply(x1,2,function(x)length(table(x))==1)
const = names(temp1[temp1==TRUE])
mfx = mfx[row.names(mfx)!=const,]
# pick out discrete change variables
temp1 = apply(x1,2,function(x)length(table(x))==2)
disch = names(temp1[temp1==TRUE])
# calculate the disctrete change marginal effects and standard errors
if(length(disch)!=0){
for(i in 1:length(disch)){
if(atmean){
disx0 = disx1 = xm
disx1[disch[i],] = max(x1[,disch[i]])
disx0[disch[i],] = min(x1[,disch[i]])
# mfx equal to    prediction @ x=1     minus prediction @ x=0
mfx[disch[i],1] = pnorm(t(be) %*% disx1) - pnorm(t(be) %*% disx0)
# standard errors
gr = dnorm(t(be) %*% disx1) %*% t(disx1) - dnorm(t(be) %*% disx0) %*% t(disx0)
mfx[disch[i],2] = sqrt(gr %*% vcv %*% t(gr))
} else {
disx0 = disx1 = x1
disx1[,disch[i]] = max(x1[,disch[i]])
disx0[,disch[i]] = min(x1[,disch[i]])
mfx[disch[i],1] = mean(pnorm(disx1 %*% be) - pnorm(disx0 %*% be))
# standard errors
gr = as.numeric(dnorm(disx1 %*% be)) * disx1 - as.numeric(dnorm(disx0 %*% be)) * disx0
avegr = as.matrix(colMeans(gr))
mfx[disch[i],2] = sqrt(t(avegr) %*% vcv %*% avegr)
}
}
}
mfx$discretechgvar = ifelse(rownames(mfx) %in% disch, 1, 0)
output = list(fit=fit, mfx=mfx)
return(output)
}
logitMfxSurv <-
function(formula,
design,
atmean = TRUE,
robust = FALSE,
clustervar1 = NULL,
clustervar2 = NULL,
start = NULL
#           control = list() # this option is found in original mfx package
)
{
#    res = logitMfxEstSurv(formula, design, atmean, robust, clustervar1, clustervar2, start, control)
res = logitMfxEstSurv(formula, design, atmean, robust, clustervar1, clustervar2, start)
est = NULL
est$mfxest = cbind(dFdx = res$mfx$mfx,
StdErr = res$mfx$se,
z.value = res$mfx$mfx/res$mfx$se,
p.value = 2*pt(-abs(res$mfx$mfx/res$mfx$se), df = Inf))
colnames(est$mfxest) = c("dF/dx","Std. Err.","z","P>|z|")
rownames(est$mfxest) =  rownames(res$mfx)
est$fit = res$fit
est$dcvar = rownames(res$mfx[res$mfx$discretechgvar==1,])
est$call = match.call()
class(est) = "logitmfx"
est
}
logit = svyglm(KvindeAndOpt ~ GnsIndkomst, design=survey.design, family=quasibinomial(link='logit'))
summary(logit)
logitMfxSurv(formula = KvindeAndOpt ~ GnsIndkomst, design = survey.design)
survey.design <- svydesign(
weights = data.2$TotalOpt,
data = data)
install.packages("survey")
library(survey)
library(survey)
logitMfxEstSurv <-
function(formula,
design,
atmean = TRUE,
robust = FALSE,
clustervar1 = NULL,
clustervar2 = NULL,
start = NULL
#           control = list() # this option is found in the original mfx package
){
if(is.null(formula)){
stop("model formula is missing")
}
for( i in 1:length(class(design))){
if(!((class(design)[i] %in% "survey.design2") | (class(design)[i] %in% "survey.design"))){
stop("design arguement must contain survey object")
}
}
# from Fernihough's original mfx function
# I dont think this is needed because the
# regression computed by the survey package should
# take care of stratification and robust SEs
# from the survey info
#
#     # cluster sort part
#     if(is.null(clustervar1) & !is.null(clustervar2)){
#       stop("use clustervar1 arguement before clustervar2 arguement")
#     }
#     if(!is.null(clustervar1)){
#       if(is.null(clustervar2)){
#         if(!(clustervar1 %in% names(data))){
#           stop("clustervar1 not in data.frame object")
#         }
#         data = data.frame(model.frame(formula, data, na.action=NULL),data[,clustervar1])
#         names(data)[dim(data)[2]] = clustervar1
#         data=na.omit(data)
#       }
#       if(!is.null(clustervar2)){
#         if(!(clustervar1 %in% names(data))){
#           stop("clustervar1 not in data.frame object")
#         }
#         if(!(clustervar2 %in% names(data))){
#           stop("clustervar2 not in data.frame object")
#         }
#         data = data.frame(model.frame(formula, data, na.action=NULL),
#                           data[,c(clustervar1,clustervar2)])
#         names(data)[c(dim(data)[2]-1):dim(data)[2]] = c(clustervar1,clustervar2)
#         data=na.omit(data)
#       }
#     }
# fit the logit regression
fit = svyglm(formula,
design=design,
family = quasibinomial(link = "logit"),
x=T
)
# TS: summary(fit)
# terms needed
x1 = model.matrix(fit)
if (any(alias <- is.na(coef(fit)))) {   # this conditional removes any vars with a NA coefficient
x1 <- x1[, !alias, drop = FALSE]
}
xm = as.matrix(svymean(x1,design)) # calculate means of x variables
be = as.matrix(na.omit(coef(fit))) # collect coefficients: be as in beta
k1 = length(na.omit(coef(fit))) # collect number of coefficients or x variables
xb = t(xm) %*% be # get the matrix product of xMean and beta, which is the model prediction at the mean
fxb = ifelse(atmean==TRUE, dnorm(xb), mean(dnorm(x1 %*% be))) # collect either the overall predicted mean, or the average of every observation's predictions
# get variances
vcv = vcov(fit)
# from Fernihough's original mfx function
# I dont think this is needed because the
# regression computed by the survey package should
# take care of stratification and robust SEs
# from the survey info
#
#     if(robust){
#       if(is.null(clustervar1)){
#         # white correction
#         vcv = vcovHC(fit, type = "HC0")
#       } else {
#         if(is.null(clustervar2)){
#           vcv = clusterVCV(data=data, fm=fit, cluster1=clustervar1,cluster2=NULL)
#         } else {
#           vcv = clusterVCV(data=data, fm=fit, cluster1=clustervar1,cluster2=clustervar2)
#         }
#       }
#     }
#
#     if(robust==FALSE & is.null(clustervar1)==FALSE){
#       if(is.null(clustervar2)){
#         vcv = clusterVCV(data=data, fm=fit, cluster1=clustervar1,cluster2=NULL)
#       } else {
#         vcv = clusterVCV(data=data, fm=fit, cluster1=clustervar1,cluster2=clustervar2)
#       }
#     }
# set mfx equal to predicted mean (or other value) multiplied by beta
mfx = data.frame(mfx=fxb*be, se=NA)
# get standard errors
if(atmean){#    fxb *  id matrix - avg model prediction * (beta X xmean)
gr = as.numeric(fxb)*(diag(k1) - as.numeric(xb) *(be %*% t(xm)))
mfx$se = sqrt(diag(gr %*% vcv %*% t(gr)))
} else {
gr = apply(x1, 1, function(x){
as.numeric(as.numeric(dnorm(x %*% be))*(diag(k1) - as.numeric(x %*% be)*(be %*% t(x))))
})
gr = matrix(apply(gr,1,mean),nrow=k1)
mfx$se = sqrt(diag(gr %*% vcv %*% t(gr)))
}
# pick out constant and remove from mfx table
temp1 = apply(x1,2,function(x)length(table(x))==1)
const = names(temp1[temp1==TRUE])
mfx = mfx[row.names(mfx)!=const,]
# pick out discrete change variables
temp1 = apply(x1,2,function(x)length(table(x))==2)
disch = names(temp1[temp1==TRUE])
# calculate the disctrete change marginal effects and standard errors
if(length(disch)!=0){
for(i in 1:length(disch)){
if(atmean){
disx0 = disx1 = xm
disx1[disch[i],] = max(x1[,disch[i]])
disx0[disch[i],] = min(x1[,disch[i]])
# mfx equal to    prediction @ x=1     minus prediction @ x=0
mfx[disch[i],1] = pnorm(t(be) %*% disx1) - pnorm(t(be) %*% disx0)
# standard errors
gr = dnorm(t(be) %*% disx1) %*% t(disx1) - dnorm(t(be) %*% disx0) %*% t(disx0)
mfx[disch[i],2] = sqrt(gr %*% vcv %*% t(gr))
} else {
disx0 = disx1 = x1
disx1[,disch[i]] = max(x1[,disch[i]])
disx0[,disch[i]] = min(x1[,disch[i]])
mfx[disch[i],1] = mean(pnorm(disx1 %*% be) - pnorm(disx0 %*% be))
# standard errors
gr = as.numeric(dnorm(disx1 %*% be)) * disx1 - as.numeric(dnorm(disx0 %*% be)) * disx0
avegr = as.matrix(colMeans(gr))
mfx[disch[i],2] = sqrt(t(avegr) %*% vcv %*% avegr)
}
}
}
mfx$discretechgvar = ifelse(rownames(mfx) %in% disch, 1, 0)
output = list(fit=fit, mfx=mfx)
return(output)
}
logitMfxSurv <-
function(formula,
design,
atmean = TRUE,
robust = FALSE,
clustervar1 = NULL,
clustervar2 = NULL,
start = NULL
#           control = list() # this option is found in original mfx package
)
{
#    res = logitMfxEstSurv(formula, design, atmean, robust, clustervar1, clustervar2, start, control)
res = logitMfxEstSurv(formula, design, atmean, robust, clustervar1, clustervar2, start)
est = NULL
est$mfxest = cbind(dFdx = res$mfx$mfx,
StdErr = res$mfx$se,
z.value = res$mfx$mfx/res$mfx$se,
p.value = 2*pt(-abs(res$mfx$mfx/res$mfx$se), df = Inf))
colnames(est$mfxest) = c("dF/dx","Std. Err.","z","P>|z|")
rownames(est$mfxest) =  rownames(res$mfx)
est$fit = res$fit
est$dcvar = rownames(res$mfx[res$mfx$discretechgvar==1,])
est$call = match.call()
class(est) = "logitmfx"
est
}
logit = svyglm(KvindeAndOpt ~ GnsIndkomst, design=survey.design, family=binomial(link='logit'))
summary(logit)
logitMfxSurv(formula = KvindeAndOpt ~ GnsIndkomst, design = survey.design)
survey.design <- svydesign(
weights = data.2$TotalOpt,
data = data)
?svydesign
survey.design <- svydesign(id=~1
weights = data.2$TotalOpt,
data = data)
survey.design <- svydesign(id=~1,
weights = data.2$TotalOpt,
data = data)
logit = svyglm(KvindeAndOpt ~ GnsIndkomst, design=survey.design, family=binomial(link='logit'))
summary(logit)
logitMfxSurv(formula = KvindeAndOpt ~ GnsIndkomst, design = survey.design)
logitMfxSurv(formula = KvindeAndOpt ~ GnsIndkomst, design = survey.design)
logitMfxSurv(formula = KvindeAndOpt ~ GnsIndkomst, design = survey.design)
survey.design <- svydesign(id=~1,
weights = data.2$TotalOpt,
data = data2)
?svydesign
logit = svyglm(KvindeAndOpt ~ GnsIndkomst, design=survey.design, family=binomial(link='logit'))
summary(logit)
logitMfxSurv(formula = KvindeAndOpt ~ GnsIndkomst, design = survey.design)
logit = svyglm(KvindeAndOpt ~ GnsIndkomst, design=survey.design, family=binomial(link="logit"))
summary(logit)
logitMfxSurv(formula = KvindeAndOpt ~ GnsIndkomst, design = survey.design)
install.packages("erer")
library(erer)
fit<-glm(KvindeAndOpt ~ GnsIndkomst+TotalOpt + Retning + Kvotient, family=binomial(link=logit), data = data.2,weights =TotalOpt )
maBina(fit, x.mean = TRUE, rev.dum = FALSE, digits = 3)
?glm
fit<-glm(KvindeAndOpt ~ GnsIndkomst+TotalOpt + Retning + Kvotient, family=binomial(link=logit), data = data.2,weights =TotalOpt, x=TRUE)
maBina(fit, x.mean = TRUE, rev.dum = FALSE, digits = 3)
fit<-glm(KvindeAndOpt ~ GnsIndkomst+TotalOpt + Retning + Kvotient, family=binomial(link=logit), data = data.2,weights =TotalOpt, x=TRUE)
maBina(fit, x.mean = TRUE, rev.dum = FALSE, digits = 9)
fit<-glm(KvindeAndOpt ~ GnsIndkomst+TotalOpt + Retning + Kvotient, family=binomial(link=logit), data = data.2,weights =TotalOpt, x=TRUE)
maBina(w=fit, x.mean = TRUE, rev.dum = TRUE, digits = 9)
fit<-glm(KvindeAndOpt ~ GnsIndkomst+TotalOpt + Retning + Kvotient, family=binomial(link=probit), data = data.2,weights =TotalOpt, x=TRUE)
maBina(w=fit, x.mean = TRUE, rev.dum = TRUE, digits = 9)
mod1<-glm(KvindeAndOpt ~ GnsIndkomst, family=binomial(link=logit), data = data.2,weights =TotalOpt, x=TRUE)
maBina(w=mod1, x.mean = TRUE, rev.dum = TRUE, digits = 9)
mod2<-glm(KvindeAndOpt ~ GnsIndkomst + Retning, family=binomial(link=logit), data = data.2,weights =TotalOpt, x=TRUE)
maBina(w=mod2, x.mean = TRUE, rev.dum = TRUE, digits = 9)
mod3<-glm(KvindeAndOpt ~ GnsIndkomst+ Retning + Kvotient, family=binomial(link=logit), data = data.2,weights =TotalOpt, x=TRUE)
maBina(w=mod3, x.mean = TRUE, rev.dum = TRUE, digits = 9)
mod4<-glm(KvindeAndOpt ~ GnsIndkomst+TotalOpt + Retning + Kvotient, family=binomial(link=logit), data = data.2,weights =TotalOpt, x=TRUE)
maBina(w=mod4, x.mean = TRUE, rev.dum = TRUE, digits = 9)
?glm
library(gather)
library(tidyr)
?tidyr
??tidyr
install.packages("splitstackshape")
libary()
libary(splitstackshape)
library(splitstackshape)
data.3 <- data.2 %>%
expandRows(data.3, "TotalOpt")
data.3 <- data.2 %>%
expandRows(data.3, "TotalOpt")
data.3 <- data.2
expandRows(data.3, "TotalOpt")
View(data.3)
View(data.3)
View(data.3)
data.4 <- expandRows(data.3, "TotalOpt")
View(data.4)
View(data.4)
data.4 <- data.3 %>%
mutate(TotalOpt = OptMaend + OptKvinder)
modw<-glm(KvindeAndOpt ~ GnsIndkomst, family=binomial(link=logit), data = data.2,weights =TotalOpt, x=TRUE)
maBina(w=modw, x.mean = TRUE, rev.dum = TRUE, digits = 9)
modd<-glm(KvindeAndOpt ~ GnsIndkomst, family=binomial(link=logit), data = data.4, x=TRUE)
maBina(w=modd, x.mean = TRUE, rev.dum = TRUE, digits = 9)
data.4 <- data.3 %>%
mutate(TotalOpt = OptMaend + OptKvinder)
data.3 <- expandRows(data.2, "TotalOpt")
data.4 <- data.3 %>%
mutate(TotalOpt = OptMaend + OptKvinder)
modw<-glm(KvindeAndOpt ~ GnsIndkomst, family=binomial(link=logit), data = data.2,weights =TotalOpt, x=TRUE)
maBina(w=modw, x.mean = TRUE, rev.dum = TRUE, digits = 9)
modd<-glm(KvindeAndOpt ~ GnsIndkomst, family=binomial(link=logit), data = data.4, x=TRUE)
maBina(w=modd, x.mean = TRUE, rev.dum = TRUE, digits = 9)
TotalOpt = OptMaend + OptKvinder,
-0.00000035*100000
pkvinde <- weighted.mean(data.2$GnsIndkomst, data.2$OptKvinder, na.rm = TRUE)
pkvinde <- weighted.mean(data.2$GnsIndkomst, data.2$OptMaend, na.rm = TRUE)
pkvinde <- weighted.mean(data.2$GnsIndkomst, data.2$OptKvinder, na.rm = TRUE)
pmaend <- weighted.mean(data.2$GnsIndkomst, data.2$OptMaend, na.rm = TRUE)
forskel <-pmaend-pkvinde
pkvinde <- weighted.mean(data.2$GnsIndkomst, data.2$OptKvinder, by(data.2$Aar) na.rm = TRUE)
pkvinde <- weighted.mean(data.2$GnsIndkomst, data.2$OptKvinder, by=list(data.2$Aar) na.rm = TRUE)
pkvinde <- weighted.mean(data.2$GnsIndkomst, data.2$OptKvinder, by=list(data.2$Aar), na.rm = TRUE)
pkvinde <- weighted.mean(data.2$GnsIndkomst, data.2$OptKvinder, by=list(Category=data.2$Aar), na.rm = TRUE)
pkvinde
ddply(data.2, .(Aar),   # so by asset class invoke following function
+       function(x) data.frame(wret=weighted.mean(x$GnsIndkomst, x$OptKvinder)))
library(dplyr)
ddply(data.2, .(Aar),   # so by asset class invoke following function
+       function(x) data.frame(wret=weighted.mean(x$GnsIndkomst, x$OptKvinder)))
install.packages("plyr")
library(plyr)
ddply(data.2, .(Aar),   # so by asset class invoke following function
+       function(x) data.frame(wret=weighted.mean(x$GnsIndkomst, x$OptKvinder)))
ddply(data.2, .(Aar),function(x) data.frame(wret=weighted.mean(x$GnsIndkomst, x$OptKvinder)))
ddply(data.2, .(Aar),function(x) data.frame(wret=weighted.mean(x$GnsIndkomst, x$OptKvinder, na.rm = TRUE)))
ddply(data.2, .(Aar),function(x) data.frame(maend=weighted.mean(x$GnsIndkomst, x$OptKvinder, na.rm = TRUE)))
ddply(data.2, .(Aar),function(x) data.frame(kvinder=weighted.mean(x$GnsIndkomst, x$OptMaend, na.rm = TRUE)))
gns <- ddply(data.2, .(Aar),function(x) data.frame(maend=weighted.mean(x$GnsIndkomst, x$OptKvinder, na.rm = TRUE)))
gnsk <- ddply(data.2, .(Aar),function(x) data.frame(kvinder=weighted.mean(x$GnsIndkomst, x$OptMaend, na.rm = TRUE)))
gns <- ddply(data.2, .(Aar),function(x) data.frame(maend=weighted.mean(x$GnsIndkomst, x$OptKvinder, na.rm = TRUE)))
gnsk <- ddply(data.2, .(Aar),function(x) data.frame(kvinder=weighted.mean(x$GnsIndkomst, x$OptMaend, na.rm = TRUE)))
gns <- gnsk %>% left_join(lon, by = "Aar")
gnsm <- ddply(data.2, .(Aar),function(x) data.frame(maend=weighted.mean(x$GnsIndkomst, x$OptKvinder, na.rm = TRUE)))
gnsk <- ddply(data.2, .(Aar),function(x) data.frame(kvinder=weighted.mean(x$GnsIndkomst, x$OptMaend, na.rm = TRUE)))
gns <- gnsk %>% left_join(gnsm, by = "Aar")
View(gns)
View(gns)
gnsm <- ddply(data.2, .(Aar),function(x) data.frame(Kvinder=weighted.mean(x$GnsIndkomst, x$OptKvinder, na.rm = TRUE)))
gnsk <- ddply(data.2, .(Aar),function(x) data.frame(Maend=weighted.mean(x$GnsIndkomst, x$OptMaend, na.rm = TRUE)))
gns <- gnsk %>% left_join(gnsm, by = "Aar")
View(gns)
View(gns)
gns$forskel <- gns$Maend - gns$Kvinder
View(gns)
View(gns)
gnsm <- ddply(data.2, .(Aar),function(x) data.frame(Kvinder=weighted.mean(x$GnsIndkomst, x$OptKvinder, na.rm = TRUE)))
gnsk <- ddply(data.2, .(Aar),function(x) data.frame(Maend=weighted.mean(x$GnsIndkomst, x$OptMaend, na.rm = TRUE)))
gns <- gnsk %>% left_join(gnsm, by = "Aar")
gns$Forskel <- gns$Maend - gns$Kvinder
View(gns)
View(gns)
View(data.2)
View(data.2)
aarm <- ddply(data.2, .(Aar),function(x) data.frame(Kvinder=weighted.mean(x$GnsIndkomst, x$OptKvinder, na.rm = TRUE)))
aark <- ddply(data.2, .(Aar),function(x) data.frame(Maend=weighted.mean(x$GnsIndkomst, x$OptMaend, na.rm = TRUE)))
gnsaar <- aark %>% left_join(aarm, by = "Aar")
gnsaar$Forskel <- gnsaar$Maend - gnsaar$Kvinder
retningm <- ddply(data.2, .(Retning),function(x) data.frame(Kvinder=weighted.mean(x$GnsIndkomst, x$OptKvinder, na.rm = TRUE)))
retningk <- ddply(data.2, .(Retning),function(x) data.frame(Maend=weighted.mean(x$GnsIndkomst, x$OptMaend, na.rm = TRUE)))
gnsretning <- retningk %>% left_join(retningm, by = "Retning")
gnsretning$Forskel <- gnsretning$Maend - gnsretning$Kvinder
View(gnsretning)
View(gnsretning)
install.packages("dplyr")
library(dplyr)
aarm <- dplyr(data.2, .(Aar),function(x) data.frame(Kvinder=weighted.mean(x$GnsIndkomst, x$OptKvinder, na.rm = TRUE)))
aark <- dplyr(data.2, .(Aar),function(x) data.frame(Maend=weighted.mean(x$GnsIndkomst, x$OptMaend, na.rm = TRUE)))
gnsaar <- aark %>% left_join(aarm, by = "Aar")
gnsaar$Forskel <- gnsaar$Maend - gnsaar$Kvinder
install.packages("dplyr")
aarm <- dplyr(data.2, .(Aar),function(x) data.frame(Kvinder=weighted.mean(x$GnsIndkomst, x$OptKvinder, na.rm = TRUE)))
aark <- dplyr(data.2, .(Aar),function(x) data.frame(Maend=weighted.mean(x$GnsIndkomst, x$OptMaend, na.rm = TRUE)))
gnsaar <- aark %>% left_join(aarm, by = "Aar")
gnsaar$Forskel <- gnsaar$Maend - gnsaar$Kvinder
logitmfx(KvindeAndOpt ~ GnsIndkomst + TotalOpt + Retning + Kvotient,data = data.2, atmean = TRUE, robust = TRUE, weights =TotalOpt)
logitmfx(KvindeAndOpt ~ GnsIndkomst + Retning + Kvotient,data = data.4, atmean = TRUE, robust = TRUE)
data.3 <- expandRows(data.2, "TotalOpt") %>%
mutate(TotalOpt = OptMaend + OptKvinder)
#Estimerer marginal effects for model 1
logitmfx(KvindeAndOpt ~ GnsIndkomst, data = data.3, atmean = TRUE, robust = TRUE)
#Estimerer marginal effects for model 2
logitmfx(KvindeAndOpt ~ GnsIndkomst + Retning,data = data.3, atmean = TRUE, robust = TRUE)
#Estimerer marginal effects for model 3
logitmfx(KvindeAndOpt ~ GnsIndkomst + Retning + Kvotient,data = data.3, atmean = TRUE, robust = TRUE)
#Estimerer marginal effects for model 4
logitmfx(KvindeAndOpt ~ GnsIndkomst + Retning + Kvotient + TotalOpt,data = data.3, atmean = TRUE, robust = TRUE)
data.3 <- expandRows(data.2, "TotalOpt") %>%
mutate(TotalOpt = OptMaend + OptKvinder,
GnsIndkomstHT = GnsIndkomst/100000,)
#Estimerer marginal effects for model 1
logitmfx(KvindeAndOpt ~ GnsIndkomstHT, data = data.3, atmean = TRUE, robust = TRUE)
#Estimerer marginal effects for model 2
logitmfx(KvindeAndOpt ~ GnsIndkomstHT + Retning,data = data.3, atmean = TRUE, robust = TRUE)
#Estimerer marginal effects for model 3
logitmfx(KvindeAndOpt ~ GnsIndkomstHT + Retning + Kvotient,data = data.3, atmean = TRUE, robust = TRUE)
#Estimerer marginal effects for model 4
logitmfx(KvindeAndOpt ~ GnsIndkomstHT + Retning + Kvotient + TotalOpt,data = data.3, atmean = TRUE, robust = TRUE)
#Expander per frequency i stedet for at vaegte - logit kan ikke regne vaegtede Marginal Effects
data.3 <- expandRows(data.2, "TotalOpt") %>%
mutate(TotalOpt = OptMaend + OptKvinder,
GnsIndkomstHT = GnsIndkomst/100000,)
#Linear Probability Model
#Linear Probability Model, Model 1
model1 <- lm(KvindeAndOpt ~ GnsIndkomstHT, data = data.3)
summary(model1)
#Linear Probability Model, Model 2
model2 <- lm(KvindeAndOpt ~ GnsIndkomstHT + Retning, data = data.3)
summary(model2)
#Linear Probability Model, Model 3
model3 <- lm(KvindeAndOpt ~ GnsIndkomstHT + Retning + Kvotient, data = data.3)
summary(model3)
#Linear Probability Model, Model 4
model4 <- lm(KvindeAndOpt ~ GnsIndkomstHT + Retning + Kvotient + TotalOpt, data = data.3)
summary(model4)
#LOGIT
#Estimerer logit marginal effects for model 1
modell1 <- logitmfx(KvindeAndOpt ~ GnsIndkomstHT, data = data.3, atmean = TRUE, robust = TRUE)
#Estimerer logit marginal effects for model 2
modell2 <- logitmfx(KvindeAndOpt ~ GnsIndkomstHT + Retning,data = data.3, atmean = TRUE, robust = TRUE)
#Estimerer logit marginal effects for model 3
modell3 <- logitmfx(KvindeAndOpt ~ GnsIndkomstHT + Retning + Kvotient,data = data.3, atmean = TRUE, robust = TRUE)
#Estimerer logit marginal effects for model 4
modell4 <- logitmfx(KvindeAndOpt ~ GnsIndkomstHT + Retning + Kvotient + TotalOpt,data = data.3, atmean = TRUE, robust = TRUE)
summary(model1)
summary(model2)
summary(model3)
summary(model4)
stargazer(model1, model2, model3, model4, modell1, modell2, modell3, modell4, title="Results", align=TRUE)
install.packages("stargazer")
library(stargazer)
stargazer(model1, model2, model3, model4, modell1, modell2, modell3, modell4, title="Results", align=TRUE)
stargazer(model1, model2, model3, model4, title="Results", align=TRUE)
?lm
model2 <- lm(KvindeAndOpt ~ GnsIndkomstHT + Retning, data = data.3)
summary(model2, robust=TRUE)
summary(model2)
?stargazer
stargazer(type=HTML,model1, model2, model3, model4, title="Results", align=TRUE)
stargazer(type=html,model1, model2, model3, model4, title="Results", align=TRUE)
stargazer(html,model1, model2, model3, model4, title="Results", align=TRUE)
stargazer(type="html",model1, model2, model3, model4, title="Results", align=TRUE)
stargazer(type="html",modell1, modell2, modell3, modell4, title="Results", align=TRUE)
install.packages("xtable")
library(xtable)
newobject<-xtable(modell1)
print.xtable(newobject, type="html", file="filename.html")
require(memisc)
install.packages("memisc")
library(memisc)
mtable12 <- mtable('Model 1' = model1,
'Model 2' = modell1,
summary.stats = c('R-squared','F','p','N'))
pander(mtable12)
install.packages("pander")
library(pander)
mtable12 <- mtable('Model 1' = model1,
'Model 2' = modell1,
summary.stats = c('R-squared','F','p','N'))
pander(mtable12)
mtable12 <- mtable('Model 1' = model1,
'Model 2' = modell1)
library(tonymisc)
install.packages("tonymisc")
library(tonymisc)
install.packages("tonymisc")
library(tonymisc)
install.packages(https://cran.r-project.org/src/contrib/Archive/tonymisc/tonymisc_1.1.1.tar.gz)
?install.packages
install.packages("https://cran.r-project.org/src/contrib/Archive/tonymisc/tonymisc_1.1.1.tar.gz")
install.packages("tonymisc_1.1.1.tgz")
install.packages("https://cran.r-project.org/src/contrib/Archive/tonymisc/tonymisc_1.1.0.tar.gz")
library("devtools")
install_github("cran/tonymisc")
modw<-glm(KvindeAndOpt ~ GnsIndkomst, family=binomial(link=logit), x=TRUE)
logit1 <- mfx_me(modw) ## Create "mfx" object to trick mtable()
mtable(modw, logit1) ## produces a table with nice output
library(tonymisc)
modw<-glm(KvindeAndOpt ~ GnsIndkomst, family=binomial(link=logit), x=TRUE)
logit1 <- mfx_me(modw) ## Create "mfx" object to trick mtable()
mtable(modw, logit1) ## produces a table with nice output
?glm
>>>>>>> origin/master
