pollutantmean("specdata")
files
files
pollutantmean <- function(directory, pollutant, id = 1:332) {
files <- list.files(directory)
files
}
pollutantmean("specdata")
pollutantmean <- function(directory, pollutant, id = 1:332) {
files <- list.files(directory, full.names=T)
files
}
pollutantmean("specdata")
pollutantmean <- function(directory, pollutant, id = 1:332) {
files <- list.files(directory, full.names=T)
data <- data.frame()
for(i in id)
{
data <- rbind(data, read.csv(files[[i]]))
}
}
pollutantmean("specdata", ,1:2)
data
pollutantmean <- function(directory, pollutant, id = 1:332) {
files <- list.files(directory, full.names=T)
datafil <- data.frame()
for(i in id)
{
datafil <- rbind(datafil, read.csv(files[[i]]))
}
}
pollutantmean("specdata", ,1:2)
datafil
pollutantmean("specdata", , id=1:2)
datafil
pollutantmean <- function(directory, pollutant, id = 1:332) {
files <- list.files(directory, full.names=T)
datafil <- data.frame()
for(i in id)
{
datafil <- rbind(datafil, read.csv(files[i]))
}
}
pollutantmean("specdata", , id=1:2)
datafil
pollutantmean <- function(directory, pollutant, id = 1:332) {
files <- list.files(directory, full.names=T)
datafil <- data.frame()
for(i in id)
{
datafil <- rbind(datafil, read.csv(files[i]))
}
}
datafil
pollutantmean <- function(directory, pollutant, id = 1:332) {
files <- list.files(directory, full.names=T)
datafil <- data.frame()
for(i in id)
{
datafil <- rbind(datafil, read.csv(files[i]))
}
mean(datafil[, pollutant], na.rm = T )
}
getwd()
pollutantmean(specdata, "nitrate", 2:3)
pollutantmean("specdata", "nitrate", 2:3)
datafil
files
files <- list.files("specdata", full.names=T)
files
pollutantmean("specdata", "nitrate", 23)
files <- list.files("specdata", full.names=T)
datafil <- data.frame()
for(i in 1:2)
{
datafil <- rbind(datafil, read.csv(files[i]))
}
datafil
head(datafil)
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names=T)
datafil <- data.frame()
for(i in id)
{
liste <- read.csv(files[i])
obser <- nrow(liste)
datafil <- rbind(i, obser)
}
print(datafil)
}
complete("specdata", 2:3)
View(datafil)
files
liste <- read.csv(files[1])
liste
nrow(liste)
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names=T)
datafil <- data.frame()
for(i in id)
{
liste <- read.csv(files[i])
obser <- nrow(liste)
datafil <- rbind(i, obser)
liste <- obser <- NULL
}
print(datafil)
}
complete("specdata", 2:3)
complete("specdata", 1:3)
complete("specdata", 1:24)
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names=T)
datafil <- data.frame()
for(i in id)
{
liste <- read.csv(files[i])
obser <- nrow(liste)
tmp <- data.frame(i, obser)
datafil <- rbind(datafil, tmp)
}
print(datafil)
}
complete("specdata", 1:24)
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names=T)
datafil <- data.frame()
for(i in id)
{
liste <- read.csv(files[i])
obser <- nrow(liste)
tmp <- data.frame(i, obser)
datafil <- rbind(datafil, i, tmp)
}
print(datafil)
}
complete("specdata", 1:24)
tmp
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names=T)
datafil <- data.frame()
for(i in id)
{
liste <- read.csv(files[i])
tmp <- data.frame(i, nrow(liste))
datafil <- rbind(datafil, i, tmp)
}
print(datafil)
}
complete("specdata", 1:24)
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names=T)
datafil <- data.frame()
for(i in id)
{
liste <- read.csv(files[i])
tmp <- data.frame(i, nrow(liste))
datafil <- rbind(datafil, tmp)
}
print(datafil)
}
complete("specdata", 1:24)
corr <- function(directory, threshold = 0) {
files_full <- list.files(directory, full.names = TRUE)
dat <- vector(mode = "numeric", length = 0)
for (i in 1:length(files_full)) {
moni_i <- read.csv(files_full[i])
csum <- sum((!is.na(moni_i$sulfate)) & (!is.na(moni_i$nitrate)))
if (csum > threshold) {
tmp <- moni_i[which(!is.na(moni_i$sulfate)), ]
submoni_i <- tmp[which(!is.na(tmp$nitrate)), ]
dat <- c(dat, cor(submoni_i$sulfate, submoni_i$nitrate))
}
}
dat
}
corr("specdata, 50")
corr("specdata", 50)
corr <- function(directory, threshold = 0) {
files_full <- list.files(directory, full.names = TRUE)
dat <- vector(mode = "numeric", length = 0)
for (i in 1:length(files_full)) {
moni_i <- read.csv(files_full[i])
csum <- sum((!is.na(moni_i$sulfate)) & (!is.na(moni_i$nitrate)))
if (csum > threshold) {
tmp <- moni_i[which(!is.na(moni_i$sulfate)), ]
submoni_i <- tmp[which(!is.na(tmp$nitrate)), ]
dat <- c(dat, cor(submoni_i$sulfate, submoni_i$nitrate))
}
}
summery(dat)
}
corr("specdata", 50)
corr <- function(directory, threshold = 0) {
files_full <- list.files(directory, full.names = TRUE)
dat <- vector(mode = "numeric", length = 0)
for (i in 1:length(files_full)) {
moni_i <- read.csv(files_full[i])
csum <- sum((!is.na(moni_i$sulfate)) & (!is.na(moni_i$nitrate)))
if (csum > threshold) {
tmp <- moni_i[which(!is.na(moni_i$sulfate)), ]
submoni_i <- tmp[which(!is.na(tmp$nitrate)), ]
dat <- c(dat, cor(submoni_i$sulfate, submoni_i$nitrate))
}
}
head(dat)
}
corr("specdata", 50)
corr("specdata", 150)
summary(dat)
moni_i <- read.csv("specdata/032.csv")
moni_i
csum <- sum((!is.na(moni_i$sulfate)) & (!is.na(moni_i$nitrate)))
csum
csum <- sum((!is.na(moni_i$sulfate)) )
csum
csum <- sum((!is.na(moni_i$sulfate)) & (!is.na(moni_i$nitrate)))
csum <- sum((!is.na(moni_i$nitrate)) )
csum
csum <- sum((!is.na(moni_i$sulfate)) & (!is.na(moni_i$nitrate)))
csum
cr <- corr("specdata", 5000)
summary(cr)
cr <- corr("specdata")
summary(cr)
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata")
summary(cr)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
csum <- sum((!is.na(moni_i$sulfate)) , (!is.na(moni_i$nitrate)))
csum
corr <- function(directory, threshold = 0) {
files_full <- list.files(directory, full.names = TRUE)
dat <- vector(mode = "numeric", length = 0)
for (i in 1:length(files_full)) {
moni_i <- read.csv(files_full[i])
csum <- sum((!is.na(moni_i$sulfate)) , (!is.na(moni_i$nitrate)))
if (csum > threshold) {
tmp <- moni_i[which(!is.na(moni_i$sulfate)), ]
submoni_i <- tmp[which(!is.na(tmp$nitrate)), ]
dat <- c(dat, cor(submoni_i$sulfate, submoni_i$nitrate))
}
}
dat
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
files_full <- list.files(directory, full.names = TRUE)
dat <- vector(mode = "numeric", length = 0)
for (i in 1:length(files_full)) {
moni_i <- read.csv(files_full[i])
csum <- sum((!is.na(moni_i$sulfate)) ,&
tmp <- moni_i[which(!is.na(moni_i$sulfate)), ]
submoni_i <- tmp[which(!is.na(tmp$nitrate)), ]
dat <- c(dat, cor(submoni_i$sulfate, submoni_i$nitrate))
}
}
dat
}
corr <- function(directory, threshold = 0) {
files_full <- list.files(directory, full.names = TRUE)
dat <- vector(mode = "numeric", length = 0)
for (i in 1:length(files_full)) {
moni_i <- read.csv(files_full[i])
csum <- sum((!is.na(moni_i$sulfate)) & (!is.na(moni_i$nitrate)))
if (csum > threshold) {
tmp <- moni_i[which(!is.na(moni_i$sulfate)), ]
submoni_i <- tmp[which(!is.na(tmp$nitrate)), ]
dat <- c(dat, cor(submoni_i$sulfate, submoni_i$nitrate))
}
}
dat
}
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
pollutantmean <- function(directory, pollutant, id = 1:332) {
files <- list.files(directory, full.names=T)
datafil <- data.frame()
for(i in id)
{
datafil <- rbind(datafil, read.csv(files[i]))
}
mean(datafil[, pollutant], na.rm = T )
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
pollutantmean("specdata", "sulfate", 1:332)
pollutantmean("specdata", "nitrate", 1:332)
complete <- function(directory, id = 1:332) {
files <- list.files(directory, full.names=T)
datafil <- data.frame()
for(i in id)
{
liste <- read.csv(files[i])
tmp <- data.frame(i, nrow(liste))
datafil <- rbind(datafil, tmp)
}
print(datafil)
}
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
corr <- function(directory, threshold = 0) {
files_full <- list.files(directory, full.names = TRUE)
dat <- vector(mode = "numeric", length = 0)
for (i in 1:length(files_full)) {
moni_i <- read.csv(files_full[i])
csum <- sum((!is.na(moni_i$sulfate)) & (!is.na(moni_i$nitrate)))
if (csum > threshold) {
tmp <- moni_i[which(!is.na(moni_i$sulfate)), ]
submoni_i <- tmp[which(!is.na(tmp$nitrate)), ]
dat <- c(dat, cor(submoni_i$sulfate, submoni_i$nitrate))
}
}
dat
}
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
complete <- function(directory, id = 1:332) {
files_full <- list.files(directory, full.names = TRUE)
dat <- data.frame()
for (i in id) {
moni_i <- read.csv(files_full[i])
nobs <- sum(complete.cases(moni_i))
tmp <- data.frame(i, nobs)
dat <- rbind(dat, tmp)
}
colnames(dat) <- c("id", "nobs")
dat
}
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
rm(list=ls()) ## Sletter alle variable og funktioner
cat("\014") # Sletter consol teksten
install.packages("freqweights")
library("freqweights")
setwd("/Users/simonharmat/Dropbox/Studie/Data_science/Gruppe4" ) ## Skriv stie
data <- import("optagelse3.csv") # læser csv-filen
lon <- import("londata1.csv") # læser csv-filen
setwd("/Users/simonharmat/Dropbox/Studie/Data_science/Gruppe4" ) ## Skriv stien
data <- import("optagelse3.csv") # læser csv-filen
lon <- import("londata1.csv") # læser csv-filen
library("rio")
data <- import("optagelse3.csv") # læser csv-filen
lon <- import("londata1.csv") # læser csv-filen
library("dplyr")
data <- data %>%
mutate(Kvotient = as.numeric(gsub(",",".",data$Kvotient))) %>%
filter(!is.na(AngMaend) | !is.na(AngKvinder) )
data.1 <- data %>%
mutate(OptMK = round(OptMaend / OptKvinder,2),
TotalOpt = OptMaend + OptKvinder,
KvindeAndOpt = round(OptKvinder /(OptMaend + OptKvinder),2),
AngMK = round(AngMaend / AngKvinder,2),
TotalAng = AngMaend + AngKvinder,
KvindeAndAng = round(AngKvinder /(AngMaend + AngKvinder),2))
data2 <- data.1 %>% left_join(lon, by = "Placering")
data3 <-  data2 %>%
filter(!is.na(GnsIndkomst))
fit <- glm(KvindeAndOpt ~ GnsIndkomst, data3)
fit <- glm(KvindeAndOpt ~ GnsIndkomst, data3, family = bionomial"logit")
fit <- glm(KvindeAndOpt ~ GnsIndkomst, data3, family = binomial"logit")
fit <- glm(KvindeAndOpt ~ GnsIndkomst, data3, family = binomial)
summary(fit)
fit <- glm(KvindeAndOpt ~ GnsIndkomst + Retning, data3, family = binomial)
summary(fit)
fit <- glm(KvindeAndOpt ~ GnsIndkomst + Kvotient, data3, family = binomial)
summary(fit)
6.579e-02
-2.327e-06*100
-2.327e-06*1000000
-2.327e-06*100000
fit <- lm(KvindeAndOpt ~ GnsIndkomst + Kvotient, data3)
summary(fit)
1.582e-02
-5.597e-07*100000
fit <- glm(KvindeAndOpt ~ GnsIndkomst + Kvotient, data3, family = binomial(link="logit"))
summary(fit)
fit <- glm(KvindeAndOpt ~ GnsIndkomst + Kvotient + Retning, data3, family = binomial(link="logit"))
summary(fit)
fit <- glm(KvindeAndOpt ~ GnsIndkomst + GnsIndkomst^2 + GnsIndkomst^3, data3, family = binomial(link="logit"))
summary(fit)
fit2 <- lm(KvindeAndOpt ~ GnsIndkomst +GnsIndkomst^2 + GnsIndkomst^3  , data3)
summary(fit2)
fit2 <- lm(KvindeAndOpt ~ poly(GnsIndkomst, 9)  , data3)
summary(fit2)
fit <- glm(KvindeAndOpt ~ poly(GnsIndkomst, 9), data3, family = binomial(link="logit"))
summary(fit)
p <- ggplot(data3, aes(GnsIndkomst, KvindeAndOpt, colour = Retning  ))
p + geom_point() +
#scale_colour_hue(l=50) +
geom_smooth(method=lm,    se=TRUE,      fullrange=TRUE)
library("ggplot2")
p <- ggplot(data3, aes(GnsIndkomst, KvindeAndOpt, colour = Retning  ))
p + geom_point() +
#scale_colour_hue(l=50) +
geom_smooth(method=lm,    se=TRUE,      fullrange=TRUE)
p <- ggplot(data3, aes(GnsIndkomst, KvindeAndOpt, ))
p + geom_point() +
#scale_colour_hue(l=50) +
geom_smooth(method=lm,    se=TRUE,      fullrange=TRUE)
p <- ggplot(data3, aes(GnsIndkomst, KvindeAndAng, ))
p + geom_point() +
#scale_colour_hue(l=50) +
geom_smooth(method=lm,    se=TRUE,      fullrange=TRUE)
p <- ggplot(data3, aes(GnsIndkomst, AngKvinder, ))
p + geom_point() +
#scale_colour_hue(l=50) +
geom_smooth(method=lm,    se=TRUE,      fullrange=TRUE)
fit <- lmfreq(KvindeAndOpt ~ GnsIndkomst, data3, freq = "TotalOpt")
summary(fit)
fit <- lmfreq(KvindeAndOpt ~ GnsIndkomst/100000, data3, freq = "TotalOpt")
summary(fit)
data3 <-  data2 %>%
filter(!is.na(GnsIndkomst)) %>%
mutate(GnsIndT = GnsIndkomst/100000)
fit <- lmfreq(KvindeAndOpt ~ GnsIndT, data3, freq = "TotalOpt")
summary(fit)
fit <- lmfreq(KvindeAndOpt ~ GnsIndT, Kvotient, data3, freq = "TotalOpt")
summary(fit)
fit <- lmfreq(KvindeAndOpt ~ GnsIndT + Kvotient, data3, freq = "TotalOpt")
summary(fit)
add_rmse = function(i){ data3 %>%
mutate(sq.error = (KvindeAndOpt - i)^2) %>%
summarise(mse = mean(sq.error),rmse = sqrt(mse), guess = i)
}
df.rmse = 63:83 %>% map_df(add_rmse)
library("purrr")
df.rmse = 63:83 %>% map_df(add_rmse)
View(df.rmse)
df.rmse %>%
filter(rmse == min(rmse))
data3 %>% summarise(round(mean(KvindeAndOpt), 0))
data3 %>% summarise(round(mean(KvindeAndOpt), 3))
View(data3)
my_model = function(pol, data = df){ lm(KvindeAndOpt ~ poly(GnsIndT, pol), data = data)
}
model.1 <- my_model(pol = 1)
my_model = function(pol, data = data3){ lm(KvindeAndOpt ~ poly(GnsIndT, pol), data = data)
}
model.1 <- my_model(pol = 1)
summary(model.1)
my_model = function(pol, data = data3){ lm(KvindeAndOpt ~ poly(GnsIndkomst, pol), data = data)
}
model.1 <- my_model(pol = 1)
summary(model.1)
summary(lm(KvindeAndOpt ~ GnsIndT, data = data3))
summary(lm(KvindeAndOpt ~ poly(GnsIndT,1), data = data3))
summary(lm(KvindeAndOpt ~ poly(GnsIndT,0), data = data3))
summary(lm(KvindeAndOpt ~ poly(GnsIndT,1), data = data3))
summary(lm(KvindeAndOpt ~ poly(GnsIndT,1), data = data3))
summary(lm(KvindeAndOpt ~ GnsIndT, data = data3))
add_pred = function(mod, data = data3){
data %>% add_predictions(mod, var = ”pred”)
}
add_pred = function(mod, data = data3){
data %>% add_predictions(mod, var = "pred")
}
df.1 = add_pred(model.1)
add_pred = function(mod, data = data3){
data %>% add_predictions(mod, var = "pred")
}
df.1 = add_pred(model.1)
model.1
install.packages("modelr")
install.packages(c("crayon", "curl", "DBI", "DiagrammeR", "digest", "htmlwidgets", "httr", "jsonlite", "knitr", "manipulate", "mgcv", "mime", "nlme", "plyr", "Rcpp", "rio", "rmarkdown", "rstudioapi", "stringi", "survival", "swirl", "tidyr", "visNetwork"))
install.packages(c("crayon", "curl", "DBI", "DiagrammeR", "digest",
install.packages("modelr")
add_pred = function(mod, data = data3){
data %>% add_predictions(mod, var = "pred")
}
library("freqweights")
library("rio")
library("dplyr")
library("ggplot2")
library("purrr")
add_pred = function(mod, data = data3){
data %>% add_predictions(mod, var = "pred")
}
df.1 = add_pred(model.1)
library("modelr")
install.packages("modelr")
install.packages(c("crayon", "curl", "DBI", "DiagrammeR", "digest", "htmlwidgets", "httr", "jsonlite", "knitr", "manipulate", "mgcv", "mime", "nlme", "plyr", "Rcpp", "rio", "rmarkdown", "rstudioapi", "stringi", "survival", "swirl", "tidyr", "visNetwork"))
install.packages(c("crayon", "curl", "DBI", "DiagrammeR", "digest",
